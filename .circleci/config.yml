version: 2.1
orbs:
  node: circleci/node@2.0.3

terraform: &terraform
  working_directory: ~/pizza-aplication
  docker:
    - image: mcarras1/terraform_aws-cli:1.2
  environment:
    TF_IN_AUTOMATION: true
    TF_VAR_AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    TF_VAR_AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
    TF_VAR_AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

jobs:
  build:
    executor: node/default
    working_directory: ~/pizza-aplication
    environment:
        BACKEND_API_ENV: $BACKEND_API
        CI: true
    steps:
        - checkout
        - run:
            name: Set env file
            command: |
                echo "REACT_APP_API_URL=$BACKEND_API_ENV" >> .env
        - run:
            name: Install
            command: npm install
        - run:
            name: Unit test
            command: echo Success
        - run:
            name: Build
            command: | 
              CI=false npm run build
              ls -la
        - persist_to_workspace:
            root: ~/pizza-aplication
            paths: .
  init:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/pizza-aplication
      - run:
          name: init
          command: |
            cd terraform
            terraform init
      - persist_to_workspace:
          root: ~/pizza-aplication
          paths: . 

  plan:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/pizza-aplication
      - run:
          name: plan
          command: |
            cd terraform
            terraform plan
      - store_artifacts:
          path: ~/pizza-aplication/terraform/tfplan
          destination: tfplan
      - persist_to_workspace:
          root: ~/pizza-aplication
          paths: .

  apply:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/pizza-aplication
      - run:
          name: apply
          command: |
            cd terraform
            terraform apply -auto-approve > output.txt
            ls -la
            ls -la ..
      - run:
          name: show
          command: terraform show -no-color > tfresult
      - persist_to_workspace:
          root: ~/pizza-aplication
          paths: .

  deploy:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/pizza-aplication
      - run:
          name: Bucket name
          command: |
            ls -la
            export BUCKET=$(cat output.txt | grep bucket_name | sed -E 's/bucket_name = //g')
      #- aws-cli/install
      #- aws-cli/setup:
      #      profile-name: personal
      #- run:
      #    name: Deploy to aws
      #    command: |
      #      cd build
      #      aws s3 sync . s3://$BUCKET

  destroy:
    <<: *terraform
    steps:
      - attach_workspace:
          at: ~/pizza-aplication
      - run:
          name: destroy app
          command: terraform destroy -auto-approve

workflows:
  version: 2
  build_front:
    jobs:
      - build
      - init:
         requires:
            - build
      - plan:
          requires:
            - init
      - apply:
          requires:
            - plan
      - deploy:
          requires:
            - apply
      - destroy:
          requires:
            - plan
          filters:
            branches:
              only:
                - destroy
